on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3

    # Setup Node.js version
    - uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    # Cache node_modules and Cypress binary
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.npm
          ~/.cache/Cypress
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Install frontend dependencies
    - name: Install frontend dependencies
      run: npm ci
      working-directory: ./client

    # Test frontend with Jest
    - name: Test frontend
      run: npm test
      working-directory: ./client
      env:
        CI: true
        VITE_KINDE_CONNECTION_EMAIL_PASSWORD: mock_connection_id
        VITE_KINDE_CONNECTION_GOOGLE: mock_google_connection_id
        VITE_KINDE_CONNECTION_FACEBOOK: mock_facebook_connection_id

    # Install backend dependencies
    - name: Install backend dependencies
      run: npm ci
      working-directory: ./backend

    # Test backend with Jest
    - name: Test backend
      run: npm test
      working-directory: ./backend
      env:
        CI: true

    # Install Cypress dependencies
    - name: Install Cypress dependencies
      run: npm ci
      working-directory: ./client

    # Run Cypress testd# Start the frontend server in the background
    - name: Start frontend server
      run: npm run dev &
      working-directory: ./client

    # Wait for the frontend server to be responsive
    - name: Wait for frontend server to be up
      run: npx wait-on http://localhost:5173
      working-directory: ./client

    # Run Cypress E2E tests
    - name: Cypress run
      run: npm run cy:run
      working-directory: ./client
      env:
        CI: true